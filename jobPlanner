<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Queue-Based Task Planner</title>
</head>
<body>
    <h1>Task Planner</h1>
    <div>
        <label for="taskInput">Enter Task: </label>
        <input type="text" id="taskInput" placeholder="Enter task here">
        <button onclick="addTask()">Add Task</button>
    </div>

    <h2>Tasks:</h2>
    <ul id="taskList">
        <!-- Tasks will be displayed here -->
    </ul>

    <script>
        class Task {
            constructor(title, description) {
                this.title = title;
                this.description = description;
                this.completed = false;
            }
        }

        class WorkerPlanner {
            constructor() {
                this.tasks = []; // A queue to hold tasks
            }

            // Add a task to the queue (end of the array)
            addTask(title) {
                const description = prompt("Enter task description:");
                if (description === null) return; // Cancel task if description is not provided

                const newTask = new Task(title, description);
                this.tasks.push(newTask);
                this.displayTasks();
            }

            // Mark task as completed
            markCompleted(index) {
                if (index >= 0 && index < this.tasks.length) {
                    this.tasks[index].completed = true;
                    this.displayTasks();
                }
            }

            // Remove a task from the front of the queue (FIFO)
            deleteTask(index) {
                if (index >= 0 && index < this.tasks.length) {
                    this.tasks.splice(index, 1); // Removes the task at the specified index
                    this.displayTasks();
                }
            }

            // Display tasks
            displayTasks() {
                const taskList = document.getElementById("taskList");
                taskList.innerHTML = ""; // Clear the list first

                this.tasks.forEach((task, index) => {
                    const taskItem = document.createElement("li");
                    taskItem.textContent = `${task.title}: ${task.description}`;
                    
                    // If the task is completed, show only the delete button
                    if (task.completed) {
                        taskItem.textContent += " (Completed)";
                        const deleteButton = document.createElement("button");
                        deleteButton.textContent = "Delete";
                        deleteButton.onclick = () => this.deleteTask(index);
                        taskItem.appendChild(deleteButton);
                    } else {
                        const completeButton = document.createElement("button");
                        completeButton.textContent = "Mark as Completed";
                        completeButton.onclick = () => this.markCompleted(index);

                        const deleteButton = document.createElement("button");
                        deleteButton.textContent = "Delete";
                        deleteButton.onclick = () => this.deleteTask(index);

                        taskItem.appendChild(completeButton);
                        taskItem.appendChild(deleteButton);
                    }

                    taskList.appendChild(taskItem);
                });
            }
        }

        const planner = new WorkerPlanner();

        // Add task function
        function addTask() {
            const taskInput = document.getElementById("taskInput");
            const taskTitle = taskInput.value.trim();

            if (taskTitle) {
                planner.addTask(taskTitle);
                taskInput.value = ""; // Clear the input field after adding
            } else {
                alert("Please enter a task.");
            }
        }

        // Initialize with some tasks
        planner.addTask("Finish the project report");
        planner.addTask("Review team code submissions");
    </script>
</body>
</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Planner</title>
</head>
<body>
    <h2>Job Planner</h2>

    <!-- Form for adding a task -->
    <div>
        <label for="title">Job Title:</label><br>
        <input type="text" id="title" placeholder="Enter job title"><br><br>

        <label for="description">Job Description:</label><br>
        <textarea id="description" placeholder="Enter job description"></textarea><br><br>

        <label for="deadline">Deadline (YYYY-MM-DD):</label><br>
        <input type="date" id="deadline"><br><br>

        <button onclick="addTask()">Add Task</button>
    </div>

    <hr>

    <!-- Area to display tasks -->
    <h3>Task List</h3>
    <ul id="taskList"></ul>

    <script>
        class Task {
            constructor(title, description, deadline) {
                this.title = title;
                this.description = description;
                this.deadline = deadline;
                this.completed = false;
            }
        }

        class WorkerPlanner {
            constructor() {
                this.tasks = [];
            }

            addTask(title, description, deadline) {
                if (title && description && deadline) {
                    this.tasks.push(new Task(title, description, deadline));
                    this.displayTasks();
                    console.log("Task added!"); // Use console.log instead of alert
                } else {
                    console.log("Please fill in all fields."); // Use console.log instead of alert
                }
            }

            displayTasks() {
                const taskList = document.getElementById("taskList");
                taskList.innerHTML = ''; // Clear the current list

                if (this.tasks.length === 0) {
                    taskList.innerHTML = '<li>No tasks available.</li>';
                    return;
                }

                this.tasks.forEach((task, index) => {
                    const taskItem = document.createElement("li");
                    taskItem.innerHTML = `
                        <span style="text-decoration: ${task.completed ? 'line-through' : 'none'};">
                            ${task.title} - ${task.description} (Deadline: ${task.deadline})
                        </span>
                        ${task.completed ? '<span> (Completed)</span>' : ''}
                        <button onclick="markCompleted(${index})">Mark Completed</button> 
                        <button onclick="deleteTask(${index})">Delete</button>
                    `;
                    taskList.appendChild(taskItem);
                });
            }

            markCompleted(index) {
                this.tasks[index].completed = true;
                console.log("Task marked as completed!"); // Use console.log instead of alert
                this.displayTasks();
            }

            deleteTask(index) {
                this.tasks.splice(index, 1);
                console.log("Task deleted!"); // Use console.log instead of alert
                this.displayTasks();
            }
        }

        // Global instance of WorkerPlanner
        const planner = new WorkerPlanner();

        function addTask() {
            const title = document.getElementById("title").value;
            const description = document.getElementById("description").value;
            const deadline = document.getElementById("deadline").value;

            planner.addTask(title, description, deadline);

            // Clear the input fields after adding the task
            document.getElementById("title").value = '';
            document.getElementById("description").value = '';
            document.getElementById("deadline").value = '';
        }

        // Display tasks on page load
        window.onload = () => planner.displayTasks();

        // Mark the task as completed
        function markCompleted(index) {
            planner.markCompleted(index);
        }

        // Delete the task
        function deleteTask(index) {
            planner.deleteTask(index);
        }
    </script>
</body>
</html>
